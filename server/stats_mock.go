// Code generated by MockGen. DO NOT EDIT.
// Source: server/stats.go

// Package server is a generated GoMock package.
package server

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockStatsReader is a mock of StatsReader interface
type MockStatsReader struct {
	ctrl     *gomock.Controller
	recorder *MockStatsReaderMockRecorder
}

// MockStatsReaderMockRecorder is the mock recorder for MockStatsReader
type MockStatsReaderMockRecorder struct {
	mock *MockStatsReader
}

// NewMockStatsReader creates a new mock instance
func NewMockStatsReader(ctrl *gomock.Controller) *MockStatsReader {
	mock := &MockStatsReader{ctrl: ctrl}
	mock.recorder = &MockStatsReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStatsReader) EXPECT() *MockStatsReaderMockRecorder {
	return m.recorder
}

// GetGlobalStats mocks base method
func (m *MockStatsReader) GetGlobalStats() GlobalStats {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGlobalStats")
	ret0, _ := ret[0].(GlobalStats)
	return ret0
}

// GetGlobalStats indicates an expected call of GetGlobalStats
func (mr *MockStatsReaderMockRecorder) GetGlobalStats() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGlobalStats", reflect.TypeOf((*MockStatsReader)(nil).GetGlobalStats))
}

// GetClientStats mocks base method
func (m *MockStatsReader) GetClientStats(clientID string) (ClientStats, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClientStats", clientID)
	ret0, _ := ret[0].(ClientStats)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetClientStats indicates an expected call of GetClientStats
func (mr *MockStatsReaderMockRecorder) GetClientStats(clientID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClientStats", reflect.TypeOf((*MockStatsReader)(nil).GetClientStats), clientID)
}
